name: Pytest

on:
  push:
    paths:
      - "**.py"
      - "**.toml"
      - "**.yml"

jobs:
  test:
    runs-on: ubuntu-20.04
    container: osgeo/gdal:ubuntu-small-3.6.1
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      AWS_S3_ENDPOINT: ${{ secrets.DO_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DO_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: edm-recipes
    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: | 
        apt update && apt install -y python3-pip python3-distutils
        curl -sSL https://install.python-poetry.org | python3 - --version 1.3.2
        export PATH="/root/.local/bin:$PATH" &&\
        poetry config virtualenvs.create false --local &&\
        poetry install --no-dev

    - name: Pytest
      shell: bash
      run: |
        source ~/.bashrc
        poetry run pytest -s

  docker:
    runs-on: ubuntu-20.04
    needs: test
    if: >-
      github.ref == 'refs/heads/main' &&
      github.event_name == 'push'
    steps:
      - name: Docker Login
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images - Ubuntu
        uses: docker/build-push-action@v2.2.2
        with:
          file: ./Dockerfile
          tags: |
            nycplanning/library:ubuntu-${{ github.sha }}
            nycplanning/library:ubuntu-latest
          push: true

  create_docs:
    if: >-
      github.ref == 'refs/heads/main' &&
      github.event_name == 'push'
    needs: test
    runs-on: ubuntu-20.04
    container: osgeo/gdal:ubuntu-small-3.6.1
    env:
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: edm-recipes

    steps:
    - uses: actions/checkout@v2

    - name: Set up GDAL and poetry
      run: |
        apt update
        apt install -y git python3-pip

    - name: Install Python dependencies, create docs
      run: |
        python3.10 -m pip install --upgrade pip
        python3.10 -m pip install .
        python3.10 -m pip install pdoc3
        python3.10 -m pdoc -f -o docs --html library

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docs/library

  commit:
    runs-on: ubuntu-20.04
    needs: create_docs
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: docs
        path: docs/library

    - name: Commit files
      continue-on-error: true
      id: commit
      run: |
        ls -l docs/
        ls -l docs/library
        git status

        DATE=$(date)
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/
        git commit -m "ðŸŽ‰ Update Docs $DATE" -a

    - name: Push changes
      uses: ad-m/github-push-action@master
      continue-on-error: true
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
